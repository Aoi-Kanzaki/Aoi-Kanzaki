import base64
import discord
from io import BytesIO
from discord.ext import commands


class Paging(discord.ui.View):
    def __init__(self, bot: commands.AutoShardedBot, prompt: str, images: dict, index: int) -> None:
        super().__init__(timeout=60)
        self.bot = bot
        self.images = images
        self.index = index
        self.prompt = prompt

    async def on_timeout(self):
        self.clear_items()
        return await self.message.edit(view=self)

    @discord.ui.button(emoji="<:prev:1010324780274176112>", label="Previous", style=discord.ButtonStyle.success)
    async def prev(self, interaction: discord.Interaction, button: discord.ui.Button):
        self.index -= 1
        if self.index > len(self.images):
            self.index = 0
        elif self.index < 0:
            self.index = len(self.images) - 1
        image = BytesIO(base64.decodebytes(
            self.images[self.index].encode("utf-8")))
        e = discord.Embed(
            colour=discord.Colour.teal(),
            description=f"{interaction.user.mention} Results are done! (Generated by craiyon.com)",
        )
        e.add_field(name="Prompt:", value=self.prompt)
        e.set_image(url="attachment://image.png")
        e.set_footer(
            text=f"Viewing image {self.index+1}/{len(self.images)}...")
        await interaction.message.delete()
        return await interaction.response.send_message(
            embed=e,
            file=discord.File(image, "image.png"),
            view=Paging(bot=self.bot, prompt=self.prompt,
                        images=self.images, index=self.index)
        )

    @discord.ui.button(emoji="<:skip:1010321396301299742>", label="Next", style=discord.ButtonStyle.success)
    async def next(self, interaction: discord.Interaction, button: discord.ui.Button):
        self.index += 1
        if self.index >= len(self.images):
            self.index = 0
        image = BytesIO(base64.decodebytes(
            self.images[self.index].encode("utf-8")))
        e = discord.Embed(
            colour=discord.Colour.teal(),
            description=f"{interaction.user.mention} Results are done! (Generated by craiyon.com)",
        )
        e.add_field(name="Prompt:", value=self.prompt)
        e.set_image(url="attachment://image.png")
        e.set_footer(
            text=f"Viewing image {self.index+1}/{len(self.images)}...")
        await interaction.message.delete()
        return await interaction.response.send_message(
            embed=e,
            file=discord.File(image, "image.png"),
            view=Paging(bot=self.bot, prompt=self.prompt,
                        images=self.images, index=self.index)
        )

    @discord.ui.button(emoji="<:stop:1010325505179918468>", label="Done", style=discord.ButtonStyle.danger)
    async def done(self, interaction: discord.Interaction, button: discord.ui.Button):
        return await interaction.message.delete()
