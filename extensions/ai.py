import time
import random
import discord
import openai
import base64
from io import BytesIO
from craiyon import Craiyon
from discord.ext import commands
from discord import app_commands as Fresh


class Ai(commands.GroupCog, name="ai", description="All Artificial intelligence related commands."):
    def __init__(self, bot: commands.AutoShardedBot):
        self.bot = bot
        self.AiKey = self.bot.config['openAiKey']
        openai.api_key = self.AiKey

    @Fresh.command(name="sql")
    @Fresh.describe(input="Ex: find all users who live in California and have over 1000 credits")
    async def sql(self, interaction: discord.Interaction, input: str):
        """Create simple SQL queries."""
        response = openai.Completion.create(
            model="text-davinci-002",
            prompt=input,
            temperature=0.3,
            max_tokens=60,
            top_p=1.0,
            frequency_penalty=0.0,
            presence_penalty=0.0
        )
        e = discord.Embed(colour=discord.Colour.teal(),
                          title="Here are your choices:")
        number = 1
        for choice in response['choices']:
            e.add_field(name=f"Choice {number}:", value="```\n{}```".format(
                str(choice['text']).replace('\n\n', '')))
        return await interaction.response.send_message(
            embed=e,
            ephemeral=True
        )

    @Fresh.command(name="fresh")
    @Fresh.describe(input="What do you want to say to Fresh?")
    async def fresh(self, interaction: discord.Interaction, input: str):
        """Talk to Fresh."""
        response = openai.Completion.create(
            model="text-davinci-002",
            prompt=input,
            temperature=0.5,
            max_tokens=60,
            top_p=0.3,
            frequency_penalty=0.5,
            presence_penalty=0.0
        )
        choice = random.choice(response['choices'])
        text = choice['text']
        return await interaction.response.send_message(
            content=str(text).replace('\n\n', ''),
            ephemeral=True
        )

    # @Fresh.command(name="image")
    # @Fresh.describe(input="What do you want the AI to create?")
    # async def image(self, interaction: discord.Interaction, input: str):
    #     """Create images from text with AI."""
    #     await interaction.response.defer()
    #     ETA = int(time.time() + 60)
    #     await interaction.followup.send(
    #         content=f"Please wait..this may take some time. `ETA:` <t:{ETA}:R>",
    #     )
    #     gen = Craiyon()
    #     result = gen.generate(input)
    #     images = result.images
    #     for img in images:
    #         try:
    #             image = BytesIO(base64.decodebytes(img.encode("utf-8")))
    #             await interaction.delete_original_response()
    #             return await interaction.channel.send(
    #                 file=discord.File(image, "image.png"),
    #                 content=f"{interaction.user.mention} Results are done! (Generated by craiyon.com)"
    #             )
    #         except Exception as e:
    #             print(e)


async def setup(bot: commands.AutoShardedBot):
    await bot.add_cog(Ai(bot))
